# Generated by Django 3.2.15 on 2023-05-26 12:09

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='Имя Фамилия')),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Телефон пользователя')),
                ('date_birth', models.CharField(blank=True, max_length=50, null=True, verbose_name='Возраст пользователя')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Пользователь',
                'verbose_name_plural': 'Пользователи',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('full_name', models.CharField(blank=True, max_length=40, null=True, verbose_name='Имя Фамилия')),
                ('town', models.CharField(blank=True, max_length=20, null=True, verbose_name='Город пользователя')),
                ('phone_number', models.CharField(blank=True, max_length=30, null=True, verbose_name='Телефон пользователя')),
                ('date_birth', models.CharField(blank=True, max_length=50, null=True, verbose_name='Возраст пользователя')),
                ('img', models.ImageField(default='default.png', upload_to='user_images', verbose_name='Фото пользователя')),
                ('info', models.TextField(verbose_name='Информация о пользователе')),
                ('education', models.CharField(blank=True, max_length=50, null=True, verbose_name='Информация об образовании')),
                ('work_experience', models.TextField(blank=True, null=True, verbose_name='Опыт работы')),
                ('public_activities', models.TextField(blank=True, null=True, verbose_name='Общественная деятельность')),
                ('instagram', models.URLField(blank=True, max_length=100, null=True)),
                ('vk', models.URLField(blank=True, max_length=100, null=True)),
                ('facebook', models.URLField(blank=True, max_length=100, null=True)),
                ('twitter', models.URLField(blank=True, max_length=100, null=True)),
                ('active_team_id', models.IntegerField(default=0)),
            ],
            options={
                'verbose_name': 'Профиль',
                'verbose_name_plural': 'Профили',
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='Наименование команды')),
                ('description', models.CharField(blank=True, max_length=1024, null=True, verbose_name='Описание команды')),
                ('count_of_players', models.IntegerField(verbose_name='Число участников')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата cоздания команды')),
                ('img', models.ImageField(default='default-team.png', upload_to='user_images', verbose_name='Фото команды')),
                ('status', models.CharField(choices=[('active', 'Active'), ('deleted', 'Deleted')], default='active', max_length=10)),
                ('members', models.ManyToManyField(blank=True, related_name='users_teams', to=settings.AUTH_USER_MODEL, verbose_name='Участники')),
                ('owner', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='created_teams', to=settings.AUTH_USER_MODEL, verbose_name='Автор команды')),
            ],
            options={
                'verbose_name': 'Команду',
                'verbose_name_plural': 'Команды',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Relationship',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('send', 'send'), ('accepted', 'accepted')], max_length=8)),
                ('created', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Cоздание')),
                ('updated', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Обновление')),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to='users.profile')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sender', to='users.profile')),
                ('to_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='to_team', to='users.team')),
            ],
            options={
                'verbose_name': 'Приглашение',
                'verbose_name_plural': 'Приглашения',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='teams',
            field=models.ManyToManyField(blank=True, related_name='teams', to='users.Team', verbose_name='Мои команды'),
        ),
        migrations.AddField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
    ]
